from cryptography.fernet import Fernet
import re

def loadKey():
    file = open("key.key", "rb")
    key = file.read()
    file.close()
    return key

key = loadKey()
fer = Fernet(key)

class Bank:

    def __init__(self, name, password):
        self.name = name
        self.password = password



def createAcc():
    confirm = input('Create Account? [Y/N] : ').lower()
    while confirm != 'y':
        print('Please input a valid answer.')
        main()

    newName = input('Enter Your Name : ')
    while validAcc(newName):
        print("Account Already Existed.")
        createAcc()

    newPass = input('Enter Your Password : ')
    deposit = input('Enter the amount of deposit (Mininum $100) : $')

    with open("bankData.txt", "a") as f:
        f.write(newName + "|" + fer.encrypt(newPass.encode()).decode() + "|" + deposit + "\n")

    print("Your Account Has Been Created.\n")

def validAcc(name):
    valid = False
    with open("bankData.txt", "r") as f :
        for line in f.readlines():
            if name in line:
                for i, char in enumerate(line):
                    if char == '|' :
                        word = line[0 : i]
                        if word == name:
                            valid = True

    return valid

def getAcc(name):
    with open("bankData.txt", "r") as f :
        for line in f.readlines():
            if name in line:
                data = line.rstrip()
                user, pwd, balance = data.split('|')
                return user, pwd, balance

def getName():
    i = 0
    print("Choose an account : \n")
    with open("bankData.txt", "r") as f :
        for line in f.readlines():
            data = line.rstrip()
            user, pwd, balance = data.split('|')
            print(f"{i}. {user}.")
            i += 1

    userInput = input("Enter account name : ")
    if validAcc(userInput) == True:
        userName, userPass, userBal = getAcc(userInput)
        inputPass = input("Enter the password for the account : ")
        if inputPass == fer.decrypt(userPass.encode()).decode():
            print("Your account info :\n")
            print("-------------------\n")
            print(f"Name : {userName} \n")
            print(f"Balance : {userBal}\n")
            print("-------------------\n")
        else :
            print(f"No such account under the name {userInput}\n")

        restart = input("Do you want to choose again? [Y/N] : ").lower()
        if restart == 'y':
            getName()
        else:
            main()
    else :
        print("Name not found. Try Again.")
        getName()

def modify(filepath, from_, to_):
    file = open(filepath,"r+")
    text = file.read()
    pattern = from_
    splitted_text = re.split(pattern,text)
    modified_text = to_.join(splitted_text)
    with open(filepath, 'w') as file:
        file.write(modified_text)
    

def transfer():
    confirmUser = input("Enter Your Account : ")
    if validAcc(confirmUser) == True :
        destinedUser = input("Enter Your Destined Account Name : ")
        if validAcc(destinedUser) == True :
            userName, userPass, userBal = getAcc(confirmUser)

            checkPass = input(f"Enter The Password for {confirmUser}'s account : ")
            if checkPass == fer.decrypt(userPass.encode()).decode():
                print(f"Your Current Balance is : ${userBal}")
                transferNominal = input("Enter The Amount of Money : $")
                if transferNominal > userBal:
                    print("Insufficient Balance, transfer Unsuccessful.")
                    main()
                elif transferNominal < "0" :
                    print("Cannot be Minus.")
                    main()
                else:
                    destName, destPass, destBal = getAcc(destinedUser)

                    destBalance = int(destBal) + int(transferNominal)
                    newBal = int(userBal) - int(transferNominal)

                    modify("bankData.txt", destBal, str(destBalance))
                    modify("bankData.txt", userBal, str(newBal))

                    print(f"Transfer Succesfully, Your Current Balance is {newBal}")
            else:
                print("Incorrect Password.\n")
        else:
            print("Name not Found.\n")

    else:
        print("Name not Found.\n")
            
def main():
    running = True
    print("Welcome to the Bank!\n")

    while running:   
        purpose = input('What is your purpose of visiting today? (enter "h" for help) : ').lower()
        if purpose == 'h':
            print('h - help')
            print('a - accounts')
            print('c - create account')
            print('t - transfer')
        elif purpose == "a":
            getName()
        elif purpose == "c":
            createAcc()
        elif purpose == "t":
            transfer()
        else:
            print("Please Input a Valid Answer.")

if __name__ == "__main__":
    main()
